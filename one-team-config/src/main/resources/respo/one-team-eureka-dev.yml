server:
  port: 2333

spring:
  application:
    name: one-team-eureka
  zipkin:
    base-url: http://${eureka.instance.hostname}:9411
  boot:
    admin:
      client:
        url: http://${eureka.instance.hostname}:9999

eureka:
  client:
    # 表示是否从 Eureka 获取注册信息，如果是单一结点，不需要通俗不其他Eureka结点，则可以设置为false，如果是集群为true
    fetch-registry: false
    # 表示是否讲自己注册到Eureka，如果要构建集群环境，需要将自己注册到集群，才需要开启
    register-with-eureka: false
    serviceUrl:
      # eureka地址，如果是集群，用逗号隔开设置多个
      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/
  instance:
    hostname: localhost
  server:  #配置属性，但由于 Eureka 自我保护模式以及心跳周期长的原因，经常会遇到 Eureka Server 不剔除已关停的节点的问题
    enable-self-preservation: false
    eviction-interval-timer-in-ms: 1000
  #### 清理间隔（单位毫秒，默认是60*1000），开发环境设置如下可快速移除不可用的服务

# health健康查看
management:
  endpoint:
    health:
      show-details: always # 开启所有的Health监控数据:
  endpoints:
    web:
      exposure:
        include: health, info # 开启了info和health两个端点